{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUMUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4693fb35cd917c2af69f0afa652528051400a767934e48f63f29d9b4ad71d53c",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1035814",
    "logsBloom": "0x
    "blockHash": "0x4f1a11a24805cf88352f6f8fa012e5310089b4f4ab8be0e88bf43cb7d17fadca",
    "transactionHash": "0x4693fb35cd917c2af69f0afa652528051400a767934e48f63f29d9b4ad71d53c",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1035814",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "de856533e99490a519e73aac1e9e16d0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUMUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Order of function constructor receive function (if exists) fallback function (if exists) external public internal private\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n//todo : Solidity style guid\\n\\n//! 1. Pragma statements\\npragma solidity ^0.8.8;\\n\\n//! 2. Import statements\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n//! 3. Interfaces,\\n//! 4. Libraries\\n//! 5 Contracts\\n\\n// TODO: @title contract untuk dalam menaruh dana\\n// ?: @author Ruka-sarashina\\n// !: @notice contract ini dibuat untuk demo menaruh dana\\n// TODO: @dev ini adalah implementasi priceFeed sebagai libray\\n\\nerror FundMe_NotOwner();\\n\\ncontract FundMe {\\n    //! Type declaration\\n    using PriceConverter for uint256;\\n\\n    //! State variabel\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUMUSD = 50 * 1e18;\\n\\n    AggregatorV3Interface public s_priceFeed; //? terjadi interacting libray\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert FundMe_NotOwner();\\n        }\\n        _;\\n    }\\n\\n    /** Order of function\\n     * constructor\\n     * receive function (if exists)\\n     * fallback function (if exists)\\n     * external\\n     * public\\n     * internal\\n     * private\\n     */\\n\\n    constructor(address priceFeedAddress) {\\n        //! constructor adalah sebuah fungsi yang akan selalu di render(panggil) pertama\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n    \\n    function fund() public payable {\\n        require(\\n            //todo getConversionRate tambah parameter untuk menerima priceFeed\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUMUSD,\\n            \\\"Kurang dari minimum\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSucces, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSucces, \\\"Call Failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner{\\n        address[] memory funders = s_funders;\\n        for(uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value:  address(this).balance}(\\\"\\\");\\n        require(success, \\\"Failed Withdraw\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns(address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)  public view returns(uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns(AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n}\\n\\n// Explainer from: https://solidity-by-example.org/fallback/\\n// Ether is sent to contract\\n//      is msg.data empty?\\n//          /   \\\\\\n//         yes  no\\n//         /     \\\\\\n//    receive()?  fallback()\\n//     /   \\\\\\n//   yes   no\\n//  /        \\\\\\n//receive()  fallback()\\n\",\"keccak256\":\"0x9c8704e674f04c00bc97e6d3da7af83b6a5e8151e92843835aa6032cba49099c\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    //* penambahan AggregatorV3Interface priceFeed untuk getConversionRate \\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) { \\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getVersion() internal view returns (uint256) {\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n            0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        );\\n        return priceFeed.version();\\n    }\\n\\n    function getConversionRate(\\n        uint256 ehtAmount,\\n        AggregatorV3Interface priceFeed //* penambahan parameter untuk FundMe\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed); //* penambahan priceFeed parameter\\n\\n        uint256 ehtAmountInUsd = (ethPrice * ehtAmount) / 1e18;\\n        return ehtAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x10fb4dced6d28c7224979e935dac43f105db2d9d4a63228a7d232491d3c46dab\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012e0380380620012e083398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b608051611160620001806000396000818161024c0152818161049b01528181610625015261081b01526111606000f3fe6080604052600436106100865760003560e01c8063893d20e811610059578063893d20e8146101355780639e87a5cd14610160578063b60d42881461018b578063be2693f014610195578063d7b4750c1461019f57610086565b80630343fb251461008b5780630ec3b027146100c85780633ccfd60b146100f35780637d4514801461010a575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610b06565b6101dc565b6040516100bf9190610b4c565b60405180910390f35b3480156100d457600080fd5b506100dd610224565b6040516100ea9190610bc6565b60405180910390f35b3480156100ff57600080fd5b5061010861024a565b005b34801561011657600080fd5b5061011f61048a565b60405161012c9190610b4c565b60405180910390f35b34801561014157600080fd5b5061014a610497565b6040516101579190610bf0565b60405180910390f35b34801561016c57600080fd5b506101756104bf565b6040516101829190610bc6565b60405180910390f35b6101936104e9565b005b61019d610623565b005b3480156101ab57600080fd5b506101c660048036038101906101c19190610c37565b6108e7565b6040516101d39190610bf0565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102cf576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561037a576000600182815481106102f5576102f4610c64565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061037290610cc2565b9150506102d2565b50600067ffffffffffffffff81111561039657610395610d0a565b5b6040519080825280602002602001820160405280156103c45781602001602082028036833780820191505090505b50600190805190602001906103da9291906109fc565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161040190610d6a565b60006040518083038185875af1925050503d806000811461043e576040519150601f19603f3d011682016040523d82523d6000602084013e610443565b606091505b5050905080610487576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047e90610ddc565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610528600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461092f90919063ffffffff16565b1015610569576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056090610e48565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461061a9190610e68565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106a8576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561072c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106e2575b5050505050905060005b81518110156107b657600082828151811061075457610753610c64565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107ae90610cc2565b915050610736565b50600067ffffffffffffffff8111156107d2576107d1610d0a565b5b6040519080825280602002602001820160405280156108005781602001602082028036833780820191505090505b50600190805190602001906108169291906109fc565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161085d90610d6a565b60006040518083038185875af1925050503d806000811461089a576040519150601f19603f3d011682016040523d82523d6000602084013e61089f565b606091505b50509050806108e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108da90610ee8565b60405180910390fd5b5050565b6000600182815481106108fd576108fc610c64565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061093b8361096b565b90506000670de0b6b3a764000085836109549190610f08565b61095e9190610f79565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156109b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dd9190611037565b5050509150506402540be400816109f491906110b2565b915050919050565b828054828255906000526020600020908101928215610a75579160200282015b82811115610a745782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a1c565b5b509050610a829190610a86565b5090565b5b80821115610a9f576000816000905550600101610a87565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ad382610aa8565b9050919050565b610ae381610ac8565b8114610aee57600080fd5b50565b600081359050610b0081610ada565b92915050565b600060208284031215610b1c57610b1b610aa3565b5b6000610b2a84828501610af1565b91505092915050565b6000819050919050565b610b4681610b33565b82525050565b6000602082019050610b616000830184610b3d565b92915050565b6000819050919050565b6000610b8c610b87610b8284610aa8565b610b67565b610aa8565b9050919050565b6000610b9e82610b71565b9050919050565b6000610bb082610b93565b9050919050565b610bc081610ba5565b82525050565b6000602082019050610bdb6000830184610bb7565b92915050565b610bea81610ac8565b82525050565b6000602082019050610c056000830184610be1565b92915050565b610c1481610b33565b8114610c1f57600080fd5b50565b600081359050610c3181610c0b565b92915050565b600060208284031215610c4d57610c4c610aa3565b5b6000610c5b84828501610c22565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ccd82610b33565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610cff57610cfe610c93565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d54600083610d39565b9150610d5f82610d44565b600082019050919050565b6000610d7582610d47565b9150819050919050565b600082825260208201905092915050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610dc6600b83610d7f565b9150610dd182610d90565b602082019050919050565b60006020820190508181036000830152610df581610db9565b9050919050565b7f4b7572616e672064617269206d696e696d756d00000000000000000000000000600082015250565b6000610e32601383610d7f565b9150610e3d82610dfc565b602082019050919050565b60006020820190508181036000830152610e6181610e25565b9050919050565b6000610e7382610b33565b9150610e7e83610b33565b9250828201905080821115610e9657610e95610c93565b5b92915050565b7f4661696c65642057697468647261770000000000000000000000000000000000600082015250565b6000610ed2600f83610d7f565b9150610edd82610e9c565b602082019050919050565b60006020820190508181036000830152610f0181610ec5565b9050919050565b6000610f1382610b33565b9150610f1e83610b33565b9250828202610f2c81610b33565b91508282048414831517610f4357610f42610c93565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f8482610b33565b9150610f8f83610b33565b925082610f9f57610f9e610f4a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fc981610faa565b8114610fd457600080fd5b50565b600081519050610fe681610fc0565b92915050565b6000819050919050565b610fff81610fec565b811461100a57600080fd5b50565b60008151905061101c81610ff6565b92915050565b60008151905061103181610c0b565b92915050565b600080600080600060a0868803121561105357611052610aa3565b5b600061106188828901610fd7565b95505060206110728882890161100d565b945050604061108388828901611022565b935050606061109488828901611022565b92505060806110a588828901610fd7565b9150509295509295909350565b60006110bd82610fec565b91506110c883610fec565b92508282026110d681610fec565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561110e5761110d610c93565b5b828205841483151761112357611122610c93565b5b509291505056fea26469706673582212205cce3aed86dec2f84695434bb22050eb447575304a0c4128c8cf070407a5372d64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c8063893d20e811610059578063893d20e8146101355780639e87a5cd14610160578063b60d42881461018b578063be2693f014610195578063d7b4750c1461019f57610086565b80630343fb251461008b5780630ec3b027146100c85780633ccfd60b146100f35780637d4514801461010a575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610b06565b6101dc565b6040516100bf9190610b4c565b60405180910390f35b3480156100d457600080fd5b506100dd610224565b6040516100ea9190610bc6565b60405180910390f35b3480156100ff57600080fd5b5061010861024a565b005b34801561011657600080fd5b5061011f61048a565b60405161012c9190610b4c565b60405180910390f35b34801561014157600080fd5b5061014a610497565b6040516101579190610bf0565b60405180910390f35b34801561016c57600080fd5b506101756104bf565b6040516101829190610bc6565b60405180910390f35b6101936104e9565b005b61019d610623565b005b3480156101ab57600080fd5b506101c660048036038101906101c19190610c37565b6108e7565b6040516101d39190610bf0565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102cf576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561037a576000600182815481106102f5576102f4610c64565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061037290610cc2565b9150506102d2565b50600067ffffffffffffffff81111561039657610395610d0a565b5b6040519080825280602002602001820160405280156103c45781602001602082028036833780820191505090505b50600190805190602001906103da9291906109fc565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161040190610d6a565b60006040518083038185875af1925050503d806000811461043e576040519150601f19603f3d011682016040523d82523d6000602084013e610443565b606091505b5050905080610487576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047e90610ddc565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610528600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461092f90919063ffffffff16565b1015610569576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056090610e48565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461061a9190610e68565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106a8576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561072c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106e2575b5050505050905060005b81518110156107b657600082828151811061075457610753610c64565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107ae90610cc2565b915050610736565b50600067ffffffffffffffff8111156107d2576107d1610d0a565b5b6040519080825280602002602001820160405280156108005781602001602082028036833780820191505090505b50600190805190602001906108169291906109fc565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161085d90610d6a565b60006040518083038185875af1925050503d806000811461089a576040519150601f19603f3d011682016040523d82523d6000602084013e61089f565b606091505b50509050806108e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108da90610ee8565b60405180910390fd5b5050565b6000600182815481106108fd576108fc610c64565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061093b8361096b565b90506000670de0b6b3a764000085836109549190610f08565b61095e9190610f79565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156109b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dd9190611037565b5050509150506402540be400816109f491906110b2565b915050919050565b828054828255906000526020600020908101928215610a75579160200282015b82811115610a745782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a1c565b5b509050610a829190610a86565b5090565b5b80821115610a9f576000816000905550600101610a87565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ad382610aa8565b9050919050565b610ae381610ac8565b8114610aee57600080fd5b50565b600081359050610b0081610ada565b92915050565b600060208284031215610b1c57610b1b610aa3565b5b6000610b2a84828501610af1565b91505092915050565b6000819050919050565b610b4681610b33565b82525050565b6000602082019050610b616000830184610b3d565b92915050565b6000819050919050565b6000610b8c610b87610b8284610aa8565b610b67565b610aa8565b9050919050565b6000610b9e82610b71565b9050919050565b6000610bb082610b93565b9050919050565b610bc081610ba5565b82525050565b6000602082019050610bdb6000830184610bb7565b92915050565b610bea81610ac8565b82525050565b6000602082019050610c056000830184610be1565b92915050565b610c1481610b33565b8114610c1f57600080fd5b50565b600081359050610c3181610c0b565b92915050565b600060208284031215610c4d57610c4c610aa3565b5b6000610c5b84828501610c22565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ccd82610b33565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610cff57610cfe610c93565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d54600083610d39565b9150610d5f82610d44565b600082019050919050565b6000610d7582610d47565b9150819050919050565b600082825260208201905092915050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610dc6600b83610d7f565b9150610dd182610d90565b602082019050919050565b60006020820190508181036000830152610df581610db9565b9050919050565b7f4b7572616e672064617269206d696e696d756d00000000000000000000000000600082015250565b6000610e32601383610d7f565b9150610e3d82610dfc565b602082019050919050565b60006020820190508181036000830152610e6181610e25565b9050919050565b6000610e7382610b33565b9150610e7e83610b33565b9250828201905080821115610e9657610e95610c93565b5b92915050565b7f4661696c65642057697468647261770000000000000000000000000000000000600082015250565b6000610ed2600f83610d7f565b9150610edd82610e9c565b602082019050919050565b60006020820190508181036000830152610f0181610ec5565b9050919050565b6000610f1382610b33565b9150610f1e83610b33565b9250828202610f2c81610b33565b91508282048414831517610f4357610f42610c93565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f8482610b33565b9150610f8f83610b33565b925082610f9f57610f9e610f4a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fc981610faa565b8114610fd457600080fd5b50565b600081519050610fe681610fc0565b92915050565b6000819050919050565b610fff81610fec565b811461100a57600080fd5b50565b60008151905061101c81610ff6565b92915050565b60008151905061103181610c0b565b92915050565b600080600080600060a0868803121561105357611052610aa3565b5b600061106188828901610fd7565b95505060206110728882890161100d565b945050604061108388828901611022565b935050606061109488828901611022565b92505060806110a588828901610fd7565b9150509295509295909350565b60006110bd82610fec565b91506110c883610fec565b92508282026110d681610fec565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561110e5761110d610c93565b5b828205841483151761112357611122610c93565b5b509291505056fea26469706673582212205cce3aed86dec2f84695434bb22050eb447575304a0c4128c8cf070407a5372d64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Order of function constructor receive function (if exists) fallback function (if exists) external public internal private"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}